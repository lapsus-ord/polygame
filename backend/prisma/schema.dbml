Table users {
  id serial [pk]
  username varchar [unique]
  password varchar
  is_admin boolean
}

Ref users_in_teams: users.id <> teams.id

// a Team is independent of a Room
// that way we can play in multiple Rooms
// with the same Team and archive it
Table teams {
  id serial [pk]
  code varchar [unique]
  name varchar
}

// a User in a Room
// no matter if it's in INDIVIDUAL or TEAM game_type
Table users_in_rooms {
  user_id serial [pk, ref: > users.id]
  room_id serial [pk, ref: > rooms.id]
}

// a Team in a Room
// shows only if the game is in TEAM game_type
Table teams_in_rooms {
  team_id serial [pk, ref: > teams.id]
  room_id serial [pk, ref: > rooms.id]
}

// a Room is where the players go and it contains a game
// It has a code for User to share
Table rooms {
  id serial [pk]
  code varchar [unique]
  name varchar
  is_public boolean
  state room_state

  game_id serial [ref: > games.id]
  creator_id serial [ref: > users.id]
}

Enum room_state {
  SETUP
  WAITING
  IN_PROGRESS
  FINISHED
}

// -----

// a Game contains it's data and it's definition
Table games {
  id serial [pk]
  definition serial [ref: > game_definitions.id]
  data json
}

// Definition of a game
// List of possible games:
//  - Tusmo / Motus
//  - Bombparty...
Table game_definitions {
  id serial [pk]
  name varchar
  game_type game_type
}

Enum game_type {
  INDIVIDUAL
  TEAM
}