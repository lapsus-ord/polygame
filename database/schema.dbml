Table user {
  id serial [pk]
  code bigint [unique]
  username varchar [unique]
  password varchar
  is_admin boolean
}

Ref user_in_team: user.id <> team.id

// -----

// a Team is independent of a Room
// that way we can play in multiple Rooms
// with the same Team and archive it
Table team {
  id serial [pk]
  code bigint [unique]
  name varchar
  created_at timestamp
}

// a User in a Room
// no matter if it's in INDIVIDUAL or TEAM game_type
Table user_in_room {
  user_id serial [pk, ref: > user.id]
  room_id serial [pk, ref: > room.id]
}

// a Team in a Room
// shows only if the game is in TEAM game_type
Table team_in_room {
  team_id serial [pk, ref: > team.id]
  room_id serial [pk, ref: > room.id]
}

// -----

// a Room is where the players go and it contains a game
// It has a code for User to share
Table room {
  id serial [pk]
  code bigint [unique]
  name varchar
  is_public boolean
  state room_state
  game_id serial [ref: > game.id]
  creator_id serial [ref: > user.id]
  created_at timestamp
}

Enum room_state {
  SETUP
  WAITING
  IN_PROGRESS
  FINISHED
}

// -----

// a Game contains it's data and it's definition
Table game {
  id serial [pk]
  definition serial [ref: > game_definition.id]
  data json
}

// Definition of a game
// List of possible games:
//  - Tusmo / Motus
//  - Bombparty...
Table game_definition {
  id serial [pk]
  name varchar
  game_type game_type
}

Enum game_type {
  INDIVIDUAL
  TEAM
}